---
title: From Jekyll to jorge
date: 2024-03-20
layout: post
lang: en
tags: [project]
---
#+OPTIONS: toc:nil num:nil
#+LANGUAGE: en

As of a couple of weeks ago, [[https://olano.dev/][olano.dev]], previously a Jekyll website, is generated with [[/][jorge]]. The migration process was slightly more complicated than I expected, but still very doable. Below are the steps I needed to take, documented for posterity. The relevant PR is [[https://github.com/facundoolano/olano.dev/pull/14][here]].

*** General Jekyll-to-jorge changes
The first few changes would be the same for any Jekyll site converted to jorge:

1. Renamed files and directories:
   #+begin_src
mv _layouts layouts
mv _includes includes
mv _data data
mv _config.yml config.yml
mkdir src
mv assets src/
rm Gemfile
   #+end_src
2. [[Https://github.com/facundoolano/olano.dev/pull/14/commits/c0ff7759d119ada8307c4de6bf152c6aeb0ff658][Updated]] the Makefile to use jorge commands instead of Jekyll ones.
3. Most of the contents of ~config.yml~ were [[https://github.com/facundoolano/olano.dev/pull/14/commits/092e07b90978d203bd60d7baa2f608cf2328c40b][removed]], since they weren't necessary anymore.
4. Removed instances of the ~strip_index~ filter in the templates, since it's not ported to jorge and wasn't needed anyway.
5. The references to config.yml values in templates were [[https://github.com/facundoolano/olano.dev/pull/14/commits/31e0933a3230fc5c908f0979b3b6e359bab65c64][renamed]] to use the ~site.config.*~ namespace.
6. The atom feed, previously generated with a Jekyll plugin, is now a regular [[https://github.com/facundoolano/olano.dev/blob/HEAD/src/feed.xml][template file]].
7. [[https://github.com/facundoolano/olano.dev/pull/14/commits/3ea5a73f3856a698a0d39c5fb0362882c39b4bfe][Tweaked]] the CSS to stop relying on whitespace for layout of inline block tags, since that's [[https://github.com/tdewolff/minify/blob/55535a46bce3503da8398a5757f7c9a89a68dc60/README.md#whitespace-removal][removed]] by the minifier.

*** olano.dev specifics

One of the peculiarities of my site (compared to other Jekyll projects), is that I generated my posts from org-mode files. But since the HTML generated by org-export has an unconventional structure, I set my [[https://github.com/facundoolano/emacs.d/blob/3ca806a36234f2954785a0e95163cf0ee028cc43/modules/facundo-blog.el#L39-L78][Emacs configuration]] to export to markdown and let Jekyll handle the HTML conversion. So I had to make a couple of extra layout changes:

#+begin_src
rm -rf _posts
mv org/_posts/* src/blog/
#+end_src

But, since I was already rearranging my website, I wanted to take the opportunity to update the URL paths to match my preferences: instead of serving posts at ~/2023-11-30-code-is-run-more-than-read/~ I wanted them at ~/blog/code-is-run-more-than-read~. I wrote a [[https://github.com/facundoolano/olano.dev/blob/2ef3f3c49488dfe837d0be96fb02ef689299fa69/migrate.py][python script]] to rename the files and make any other necessary bulk update:

   1. Remove the date from file names.
   2. Remove the date from internal links in the org files.
   3. Remove the ~#+BEGIN_EXPORT html~ and ~#+END_EXPORT~ wrapping the post front-matter.
   4. Ensure the front-matter was included in the first line of the files, moving other org-mode directives below it.
   5. Ensure the front-matter includes a ~lang~ key (my site was previously relying in configuration to set ~lang: es~ whenever the key was missing).
   6. Rename the footnotes header, since I was previously relying on org-export internals to translate it from the default, and go-org leaves it as-is.
   7. Patch image links to stop relying on file-relative paths (e.g ~../assets/img/~)

Since the changes required serving posts at a new location, I needed to update my nginx configuration so old links didn't break. On a first iteration, I [[https://github.com/facundoolano/olano.dev/blob/745d1b465e932765440bc4b0cc294f23dd8e8ee3/server/nginx/sites-available/olano.dev#L37][used try_files]] so nginx could handle both the Jekyll and jorge directory layouts. Once the jorge files were in place, I changed it again to [[https://github.com/facundoolano/olano.dev/pull/14/commits/8472525a3ed81b3f65ee45ccad20287197fb5f80][issue redirects]] on the old post locations.

Something I noticed when switching to jorge is that some big JavaScript files, already minified by the Closure compiler, were causing huge build delays because the minifier tried to process them anyway. I worked around this by adding support for a new config setting in jorge, allowing to [[https://github.com/facundoolano/olano.dev/blob/2ef3f3c49488dfe837d0be96fb02ef689299fa69/config.yml#L8-L10][exclude file patterns]] from the minifier.

*** org-related patches

Some of the changes were required because the HTML produced by go-org wasn't exactly the same as the one from my previous setup:

1. For some reason, my old org-export to Markdown configuration caused both ~*~ and ~**~ org headers to generate ~<h2>~ in the HTML. When I switched to jorge, each would produce either ~<h1>~ and ~<h2>~ or  ~<h2>~ and ~<h3>~, depending on go-org's [[https://github.com/niklasfasching/go-org/pull/95][TopLevelHLevel setting]]. In order to preserve the layout of my posts, I needed to tweak the [[https://github.com/facundoolano/olano.dev/blob/2ef3f3c49488dfe837d0be96fb02ef689299fa69/migrate.py#L80-L88][migration script]] to demote ~*~ headers to ~**~.
2. For some reason, I needed to replace ~\ast{}~ to ~\lowast{}~ to preserve how asterisks were rendered in section separators (I wanted âˆ— but was getting *).
3. [[https://github.com/facundoolano/olano.dev/pull/14/commits/d87ff9813d9c3d56fd3f766009f6ba08b2a480e9][Updated]] the CSS to preserve footnote and centered blocks rendering.
4. [[https://github.com/facundoolano/olano.dev/pull/14/commits/59f91944e4fe1c2f2e579623fca996d57284de12][Updated]] the CSS to preserve verse blocks rendering.
